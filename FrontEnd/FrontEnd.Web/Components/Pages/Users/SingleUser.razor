@page "/users/{Id:int}"

@using FrontEnd.Web.Services
@attribute [StreamRendering]
@inject IIdentityService IdentityService

<PageTitle>@(_user?.Username ?? "Single recipe display")</PageTitle>

@if (_task is not { IsCompleted: true })
{
    <FluentStack Orientation="Orientation.Vertical">
        <FluentSkeleton Shape="SkeletonShape.Circle" Height="200px" Width="200px" Style="margin: 0 auto 10px auto"/>
        <FluentSkeleton Height="2.5em" Width="200px" Style="margin: 0 auto 10px auto"/>
    </FluentStack>
}
else if (_user == null)
{
    <FluentLabel Typo="Typography.H1" MarginBlock="10px">User not found.</FluentLabel>
    <FluentLabel Typo="Typography.Body" MarginBlock="10px">The requested user doesn't exist.</FluentLabel>
}
else
{
    <FluentStack Orientation="Orientation.Vertical">
        <FluentPersona Image="@_imageUrl" ImageSize="200px" Style="margin: 0 auto;"/>
        <FluentLabel Typo="Typography.H1" MarginBlock="10px" Alignment="HorizontalAlignment.Center" Style="width: 100%">@_user.Username</FluentLabel>
        <FluentLabel Typo="Typography.H3">Recipes</FluentLabel>
        <FluentLabel Typo="Typography.Body">Recipes should be shown here</FluentLabel>
    </FluentStack>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Identity.Public.User? _user;
    private Task<Identity.Public.User?>? _task;

    private const string _imageUrl = "https://as2.ftcdn.net/v2/jpg/00/64/67/63/1000_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg";

    protected override async Task OnInitializedAsync()
    {
        _task = IdentityService.GetByIdAsync(Id);
        _user = await _task;
    }
}
